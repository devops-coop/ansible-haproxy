---
- name: Include distribution variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
    - default.yml

# - name: 'Check epel repo'
#   shell: yum repolist | grep -qi EPEL
#   register: epel_repo_check
#   check_mode: false
#   when: ansible_pkg_mgr == "yum"

# - name: 'Add epel repo'
#   template:
#     src: "epel.repo"
#     dest: "/etc/yum.repos.d/epel.repo"
#     owner: "root"
#     group: "root"
#     mode: "0644"
#   when: ansible_pkg_mgr == "yum" and epel_repo_check is defined and epel_repo_check.rc != 0

- name: 'Add haproxy apt repo (squeeze)'
  apt_repository:
    repo: deb http://http.debian.net/debian {{ ansible_distribution_release }}-backports-sloppy main
    state: present
    update_cache: yes
  when: ansible_distribution_release == 'squeeze'

- name: Add haproxy apt repo (wheezy/jessie)
  apt_repository:
    repo: deb http://http.debian.net/debian {{ ansible_distribution_release }}-backports main
    state: present
    update_cache: yes
  when: ansible_distribution_release == 'wheezy' or ansible_distribution_release == 'jessie'

- name: 'Add haproxy apt repo (Ubuntu)'
  apt_repository:
    repo: "ppa:vbernat/haproxy-1.5"
    state: present
    update_cache: yes
  when: ansible_distribution == "Ubuntu"

- name: Install HAProxy (yum)
  yum:
    name: "{{ haproxy_package_name }}"
  when: ansible_pkg_mgr == "yum"

- name: Install HAProxy (apt squeeze)
  apt:
    name: "{{ haproxy_package_name }}"
    default_release: "{{ansible_distribution_release}}-backports-sloppy"
  when: ansible_distribution_release == 'squeeze'

- name: Install HAProxy (apt wheezy/jessie)
  apt:
    name: "{{ haproxy_package_name }}"
    default_release: "{{ansible_distribution_release}}-backports"
  when: ansible_distribution_release == 'wheezy' or ansible_distribution_release == 'jessie'

- name: Install HAProxy (Ubuntu)
  package:
    name: "{{ haproxy_package_name }}"
  when: ansible_distribution == 'Ubuntu'

- name: Installs policycoreutils-python
  package:
    name: policycoreutils-python
    state: present
  when: (ansible_selinux.status == "enabled") and (ansible_os_family == "RedHat")

- name: Allow HAProxy to manage ports (SELinux)
  selinux_permissive:
    name: haproxy_t
    permissive: true
  when: ansible_selinux.status == "enabled" and (ansible_os_family == "RedHat")

- meta: flush_handlers

- name: Install supplementary packages
  package:
    name: "{{ item }}"
  with_items: "{{ haproxy_extra_packages }}"

- name: 'Ensure service started'
  service:
    name: haproxy
    state: started
    enabled: yes

- name: 'Ensure chroot directory exists'
  file:
    name: "{{ haproxy_global.chroot }}"
    state: directory
  when: haproxy_global.chroot is defined and haproxy_global.chroot
